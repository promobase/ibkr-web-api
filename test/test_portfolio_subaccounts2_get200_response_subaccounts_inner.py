# coding: utf-8

"""
    Client Portal Web API

    Client Poral Web API

    The version of the OpenAPI document: 1.0.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.portfolio_subaccounts2_get200_response_subaccounts_inner import PortfolioSubaccounts2Get200ResponseSubaccountsInner

class TestPortfolioSubaccounts2Get200ResponseSubaccountsInner(unittest.TestCase):
    """PortfolioSubaccounts2Get200ResponseSubaccountsInner unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> PortfolioSubaccounts2Get200ResponseSubaccountsInner:
        """Test PortfolioSubaccounts2Get200ResponseSubaccountsInner
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `PortfolioSubaccounts2Get200ResponseSubaccountsInner`
        """
        model = PortfolioSubaccounts2Get200ResponseSubaccountsInner()
        if include_optional:
            return PortfolioSubaccounts2Get200ResponseSubaccountsInner(
                id = '',
                account_id = 'U12345678 for Individual Live Accounts, DU12345678 for Individual Paper Accounts',
                account_van = '',
                account_title = '',
                display_name = 'accountTitle',
                account_alias = '',
                account_status = 1.337,
                currency = 'AUD',
                type = 'INDIVIDUAL',
                trading_type = '',
                faclient = True,
                clearing_status = 'O'
            )
        else:
            return PortfolioSubaccounts2Get200ResponseSubaccountsInner(
        )
        """

    def testPortfolioSubaccounts2Get200ResponseSubaccountsInner(self):
        """Test PortfolioSubaccounts2Get200ResponseSubaccountsInner"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
