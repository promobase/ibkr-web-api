# coding: utf-8

"""
    Client Portal Web API

    Client Poral Web API

    The version of the OpenAPI document: 1.0.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.market_data import MarketData

class TestMarketData(unittest.TestCase):
    """MarketData unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> MarketData:
        """Test MarketData
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `MarketData`
        """
        model = MarketData()
        if include_optional:
            return MarketData(
                var_31 = '',
                var_70 = 1.337,
                var_71 = 1.337,
                var_82 = '',
                var_83 = 1.337,
                var_84 = '',
                var_85 = '',
                var_86 = '',
                var_87 = '',
                var_88 = '',
                var_6509 = '',
                var_7057 = '',
                var_7058 = '',
                var_7059 = 1.337,
                var_7068 = '',
                var_7195 = '',
                var_7196 = '',
                var_7197 = '',
                var_7198 = '',
                var_7199 = '',
                var_7200 = '',
                var_7201 = '',
                var_7202 = '',
                var_7203 = '',
                var_7204 = '',
                var_7205 = '',
                var_7206 = '',
                var_7207 = '',
                var_7208 = '',
                var_7209 = '',
                var_7210 = '',
                var_7211 = '',
                var_7212 = '',
                var_7245 = '',
                var_7246 = '',
                var_7247 = '',
                var_7248 = '',
                var_7249 = '',
                var_7263 = '',
                var_7264 = '',
                var_7265 = '',
                var_7266 = '',
                var_7267 = '',
                var_7268 = '',
                var_7269 = '',
                var_7271 = '',
                var_7272 = '',
                var_7273 = '',
                var_7274 = '',
                var_7275 = '',
                var_7276 = '',
                var_7277 = '',
                var_7282 = '',
                var_7283 = '',
                var_7284 = '',
                var_7286 = 1.337,
                var_7287 = '',
                var_7288 = '',
                var_7289 = '',
                var_7290 = '',
                var_7293 = '',
                var_7294 = '',
                var_7295 = 1.337,
                var_7296 = 1.337,
                var_7331 = '',
                var_7370 = '',
                var_7371 = '',
                var_7372 = '',
                var_7635 = '',
                var_7636 = 1.337,
                var_7637 = '',
                var_7644 = '',
                var_7674 = '',
                var_7675 = '',
                var_7676 = '',
                var_7677 = '',
                var_7681 = '',
                var_7698 = '',
                var_7699 = '',
                var_7718 = '',
                var_7720 = '',
                var_7743 = '',
                var_7761 = '',
                var_7992 = '',
                var_7993 = '',
                var_7994 = '',
                var_7995 = '',
                conid = 56,
                min_tick = 1.337,
                bbo_exchange = '',
                has_delayed = True,
                size_min_tick = 56,
                best_eligible = 56,
                best_bid_exch = 56,
                best_ask_exch = 56,
                pre_open_bid = 56,
                last_attribs = 56,
                timestamp_base = 56,
                timestamp_delta = 56,
                last_exch = 56,
                close_attribs = 56
            )
        else:
            return MarketData(
        )
        """

    def testMarketData(self):
        """Test MarketData"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
