# coding: utf-8

"""
    Client Portal Web API

    Client Poral Web API

    The version of the OpenAPI document: 1.0.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.allocation_inner import AllocationInner

class TestAllocationInner(unittest.TestCase):
    """AllocationInner unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> AllocationInner:
        """Test AllocationInner
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `AllocationInner`
        """
        model = AllocationInner()
        if include_optional:
            return AllocationInner(
                asset_class = openapi_client.models.allocation_inner_asset_class.allocation_inner_assetClass(
                    long = openapi_client.models.allocation_inner_asset_class_long.allocation_inner_assetClass_long(
                        stk = 1.337, 
                        opt = 1.337, 
                        fut = 1.337, 
                        war = 1.337, 
                        bond = 1.337, 
                        cash = 1.337, ), 
                    short = openapi_client.models.allocation_inner_asset_class_short.allocation_inner_assetClass_short(
                        stk = 1.337, 
                        opt = 1.337, 
                        fut = 1.337, 
                        war = 1.337, 
                        bond = 1.337, 
                        cash = 1.337, ), ),
                sector = openapi_client.models.allocation_inner_sector.allocation_inner_sector(
                    long = openapi_client.models.allocation_inner_sector_long.allocation_inner_sector_long(
                        others = 1.337, 
                        utilities = 1.337, 
                        energy = 1.337, 
                        technology = 1.337, 
                        financial = 1.337, 
                        communications = 1.337, ), 
                    short = openapi_client.models.allocation_inner_sector_short.allocation_inner_sector_short(
                        industrial = 1.337, 
                        consumer = 1.337, 
                        diversified = 1.337, ), ),
                group = openapi_client.models.allocation_inner_group.allocation_inner_group(
                    long = openapi_client.models.allocation_inner_group_long.allocation_inner_group_long(
                        computers = 1.337, 
                        semiconductors = 1.337, 
                        others = 1.337, 
                        chemicals = 1.337, 
                        apparel = 1.337, 
                        communications = 1.337, ), 
                    short = openapi_client.models.allocation_inner_group_short.allocation_inner_group_short(
                        banks = 1.337, 
                        airlines = 1.337, 
                        internet = 1.337, ), )
            )
        else:
            return AllocationInner(
        )
        """

    def testAllocationInner(self):
        """Test AllocationInner"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
