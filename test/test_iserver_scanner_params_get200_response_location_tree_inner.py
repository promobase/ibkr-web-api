# coding: utf-8

"""
    Client Portal Web API

    Client Poral Web API

    The version of the OpenAPI document: 1.0.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.iserver_scanner_params_get200_response_location_tree_inner import IserverScannerParamsGet200ResponseLocationTreeInner

class TestIserverScannerParamsGet200ResponseLocationTreeInner(unittest.TestCase):
    """IserverScannerParamsGet200ResponseLocationTreeInner unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> IserverScannerParamsGet200ResponseLocationTreeInner:
        """Test IserverScannerParamsGet200ResponseLocationTreeInner
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `IserverScannerParamsGet200ResponseLocationTreeInner`
        """
        model = IserverScannerParamsGet200ResponseLocationTreeInner()
        if include_optional:
            return IserverScannerParamsGet200ResponseLocationTreeInner(
                display_name = '',
                type = '',
                locations = [
                    openapi_client.models._iserver_scanner_params_get_200_response_location_tree_inner_locations_inner._iserver_scanner_params_get_200_response_location_tree_inner_locations_inner(
                        display_name = '', 
                        type = '', )
                    ]
            )
        else:
            return IserverScannerParamsGet200ResponseLocationTreeInner(
        )
        """

    def testIserverScannerParamsGet200ResponseLocationTreeInner(self):
        """Test IserverScannerParamsGet200ResponseLocationTreeInner"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
